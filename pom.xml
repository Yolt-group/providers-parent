<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.yolt.providers</groupId>
    <artifactId>providers-parent</artifactId>
    <version>3.2.19-SNAPSHOT</version>
    <packaging>pom</packaging>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.8</version>
        <relativePath />
    </parent>
    <repositories>
        <repository>
            <id>lovebird-aws</id>
            <url>https://nexus.yolt.io/repository/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>lovebird-aws</id>
            <url>https://nexus.yolt.io/repository/public/</url>
        </pluginRepository>
    </pluginRepositories>
    <distributionManagement>
        <repository>
            <id>lovebird-releases</id>
            <url>https://nexus.yolt.io/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>lovebird-snapshots</id>
            <url>https://nexus.yolt.io/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
    <scm>
        <connection>scm:git:https://git.yolt.io/providers/providers-parent.git</connection>
        <developerConnection>scm:git:https://git.yolt.io/providers/providers-parent.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <properties>
        <java.version>17</java.version>
        <sonar.projectKey>${project.artifactId}-master</sonar.projectKey>

        <!-- Versions as properties for use with mvn versions:update-properties -->
        <spring-cloud.version>2021.0.5</spring-cloud.version>
        <!-- Override spring-boot managed versions -->
        <maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M3</maven-failsafe-plugin.version>
        <mockito.version>4.6.1</mockito.version>

        <!-- Other dependencies versions properties -->
        <jose4j.version>0.9.2</jose4j.version>
        <commons-io.version>2.11.0</commons-io.version>
        <logstash-logback-encoder.version>7.2</logstash-logback-encoder.version>
        <security-utils.version>0.0.20</security-utils.version>
        <bcprov-jdk15on.version>1.70</bcprov-jdk15on.version>
        <jackson-databind-nullable.version>0.2.4</jackson-databind-nullable.version>
        <openapi-generator-maven-plugin.version>5.4.0</openapi-generator-maven-plugin.version>
        <v3.swagger-annotations.version>2.2.6</v3.swagger-annotations.version>
        <jsr305.version>3.0.2</jsr305.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.bitbucket.b_c</groupId>
                <artifactId>jose4j</artifactId>
                <version>${jose4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bcprov-jdk15on.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${v3.swagger-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openapitools</groupId>
                <artifactId>jackson-databind-nullable</artifactId>
                <version>${jackson-databind-nullable.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yolt</groupId>
                <artifactId>security-utils</artifactId>
                <version>${security-utils.version}</version>
            </dependency>
            <dependency>
                <!--This dependency is required for openapi-generator-maven-plugin.
                as it contains annotations used by this plugin for example @javax.annotation.Nullable
                which were moved to this library in newer versions-->
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${jsr305.version}</version>
            </dependency>
            <!-- Remove this dependency when Spring Boot will be upgraded due to CVE-2022-25857 -->
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>1.33</version>
                <scope>compile</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>${java.version}</release>
                </configuration>
            </plugin>
            <!-- Code coverage compatible with JDK7+ -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-prepare-agent-integration</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report-integration</id>
                        <goals>
                            <goal>report-integration</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <runOrder>random</runOrder>
                </configuration>
            </plugin>
            <!-- Integration testing not run otherwise -->
            <plugin>
                <inherited>true</inherited>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <runOrder>random</runOrder>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <inherited>true</inherited>
                    </execution>
                </executions>
            </plugin>
            <!-- Generate version properties file -->
            <plugin>
                <inherited>true</inherited>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <verbose>false</verbose>
                </configuration>
            </plugin>

            <!-- Copy documentation files -->
            <!-- The "Antrun" plugin is used (instead of others) because for now it is the only resource plugin that can flatten the output
            structure, needed in order to have effortless providers/providers reading documentation working. -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>
                            generate-sources
                        </phase>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.outputDirectory}/documentation" />
                                <copy todir="${project.build.outputDirectory}/documentation" flatten="true">
                                    <fileset dir="${project.basedir}">
                                        <filename regex=".*_ReadMe_(AIS|PIS){1}\.md" />
                                    </fileset>
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <!-- Never include lombok as packaged dependency -->
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <!-- Add build info to META-INF -->
                        <execution>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- MRELEASE-812 "prepare" does not commit before tagging
                    and therefore deploys snapshot instead of release -->
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                </plugin>
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi-generator-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
